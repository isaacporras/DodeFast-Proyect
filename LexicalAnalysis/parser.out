Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEFAULT
    SUMA

Grammar

Rule 0     S' -> Start
Rule 1     Start -> code
Rule 2     Start -> empty
Rule 3     code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento
Rule 4     variable -> sinini PUNTOCOMA cuerpo
Rule 5     variable -> ini PUNTOCOMA cuerpo
Rule 6     variable -> empty empty empty
Rule 7     cuerpo -> variable
Rule 8     cuerpo -> expresion
Rule 9     expresion -> condicion1 expresion
Rule 10    expresion -> condicion2 expresion
Rule 11    expresion -> repita expresion
Rule 12    expresion -> hacer expresion
Rule 13    expresion -> funcion expresion
Rule 14    expresion -> llamarProc expresion
Rule 15    expresion -> empty empty
Rule 16    procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento
Rule 17    procedimiento -> empty empty empty empty empty empty empty empty empty empty empty
Rule 18    repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
Rule 19    condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
Rule 20    cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
Rule 21    cond2Aux1 -> empty empty empty empty empty
Rule 22    cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
Rule 23    cond2Aux2 -> empty empty empty empty empty empty empty empty
Rule 24    condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA
Rule 25    cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
Rule 26    cond1Aux1 -> empty empty empty empty empty
Rule 27    cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
Rule 28    cond1Aux2 -> empty empty empty empty empty empty empty empty empty
Rule 29    hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
Rule 30    funcion -> Aleatorio
Rule 31    funcion -> Mover
Rule 32    funcion -> funcionAlge
Rule 33    llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
Rule 34    parametro -> ID
Rule 35    parametro -> NUMERO
Rule 36    parametro -> empty
Rule 37    funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 38    funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 39    funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 40    Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
Rule 41    paramMover -> AF
Rule 42    paramMover -> F
Rule 43    paramMover -> DFA
Rule 44    paramMover -> IFA
Rule 45    paramMover -> DFB
Rule 46    paramMover -> IFB
Rule 47    paramMover -> A
Rule 48    paramMover -> DAA
Rule 49    paramMover -> IAA
Rule 50    paramMover -> DAB
Rule 51    paramMover -> IAB
Rule 52    paramMover -> AA
Rule 53    Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
Rule 54    condicion -> IGUAL
Rule 55    condicion -> MAYOR
Rule 56    condicion -> MENOR
Rule 57    condicion -> DIFERENTE
Rule 58    condicion -> MAYORIGUAL
Rule 59    condicion -> MENORIGUAL
Rule 60    sentencia -> ID
Rule 61    sentencia -> NUMERO
Rule 62    ini -> DCL ID IGUAL NUMERO
Rule 63    sinini -> DCL ID
Rule 64    empty -> <empty>

Terminals, with rules where they appear

A                    : 47
AA                   : 52
AF                   : 41
ALEATORIO            : 53
COMA                 : 37 38 39
CUANDO               : 22 27
DAA                  : 48
DAB                  : 50
DCL                  : 62 63
DEC                  : 38
DEFAULT              : 
DESDE                : 29
DFA                  : 43
DFB                  : 45
DIFERENTE            : 57
DOSPUNTOS            : 3 16
ENCASO               : 19 24
ENTONS               : 22 27
F                    : 42
FIN                  : 3
FINDESDE             : 29
FINENCASO            : 19 24
FINPROC              : 16
HAGA                 : 29
HASTA                : 29
HASTAENCONTRAR       : 18
IAA                  : 49
IAB                  : 51
ID                   : 16 16 18 19 27 29 33 34 37 38 39 60 62 63
IFA                  : 44
IFB                  : 46
IGUAL                : 29 54 62
INC                  : 37
INI                  : 39
INICIO               : 3
INICIOPROC           : 16
LLAMAR               : 33
LLAVE_DER            : 18 20 22 25 27 29
LLAVE_IZQ            : 18 20 22 25 27 29
MAYOR                : 55
MAYORIGUAL           : 58
MENOR                : 56
MENORIGUAL           : 59
MOVER                : 40
NUMERO               : 35 61 62
PARENTESIS_DER       : 16 33 37 38 39 40 53
PARENTESIS_IZQ       : 16 33 37 38 39 40 53
PROC                 : 16
PUNTOCOMA            : 3 4 5 16 18 19 24 29 33 37 38 39 40 53
REPITA               : 18
SINO                 : 20 25
SUMA                 : 
error                : 

Nonterminals, with rules where they appear

Aleatorio            : 30
Mover                : 31
Start                : 0
code                 : 1
cond1Aux1            : 24
cond1Aux2            : 25 27
cond2Aux1            : 19
cond2Aux2            : 20 22
condicion            : 18 22 27
condicion1           : 9
condicion2           : 10
cuerpo               : 3 4 5
empty                : 2 6 6 6 15 15 17 17 17 17 17 17 17 17 17 17 17 21 21 21 21 21 23 23 23 23 23 23 23 23 26 26 26 26 26 28 28 28 28 28 28 28 28 28 36
expresion            : 8 9 10 11 12 13 14 16 18 20 22 25 27 29
funcion              : 13
funcionAlge          : 32
hacer                : 12
ini                  : 5
llamarProc           : 14
paramMover           : 40
parametro            : 33
procedimiento        : 3 16
repita               : 11
sentencia            : 18 22 27 29 29 37 38 39
sinini               : 4
variable             : 7

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . code
    (2) Start -> . empty
    (3) code -> . INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento
    (64) empty -> .

    INICIO          shift and go to state 4
    $end            reduce using rule 64 (empty -> .)

    Start                          shift and go to state 1
    code                           shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> Start .



state 2

    (1) Start -> code .

    $end            reduce using rule 1 (Start -> code .)


state 3

    (2) Start -> empty .

    $end            reduce using rule 2 (Start -> empty .)


state 4

    (3) code -> INICIO . DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento

    DOSPUNTOS       shift and go to state 5


state 5

    (3) code -> INICIO DOSPUNTOS . cuerpo FIN PUNTOCOMA procedimiento
    (7) cuerpo -> . variable
    (8) cuerpo -> . expresion
    (4) variable -> . sinini PUNTOCOMA cuerpo
    (5) variable -> . ini PUNTOCOMA cuerpo
    (6) variable -> . empty empty empty
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (63) sinini -> . DCL ID
    (62) ini -> . DCL ID IGUAL NUMERO
    (64) empty -> .
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DCL             shift and go to state 18
    FIN             reduce using rule 64 (empty -> .)
    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    expresion                      shift and go to state 8
    sinini                         shift and go to state 9
    ini                            shift and go to state 10
    empty                          shift and go to state 11
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 6

    (3) code -> INICIO DOSPUNTOS cuerpo . FIN PUNTOCOMA procedimiento

    FIN             shift and go to state 31


state 7

    (7) cuerpo -> variable .

    FIN             reduce using rule 7 (cuerpo -> variable .)


state 8

    (8) cuerpo -> expresion .

    FIN             reduce using rule 8 (cuerpo -> expresion .)


state 9

    (4) variable -> sinini . PUNTOCOMA cuerpo

    PUNTOCOMA       shift and go to state 32


state 10

    (5) variable -> ini . PUNTOCOMA cuerpo

    PUNTOCOMA       shift and go to state 33


state 11

    (6) variable -> empty . empty empty
    (15) expresion -> empty . empty
    (64) empty -> .

    FIN             reduce using rule 64 (empty -> .)

    empty                          shift and go to state 34

state 12

    (9) expresion -> condicion1 . expresion
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    FIN             reduce using rule 64 (empty -> .)
    LLAVE_DER       reduce using rule 64 (empty -> .)
    FINPROC         reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    condicion1                     shift and go to state 12
    expresion                      shift and go to state 35
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 13

    (10) expresion -> condicion2 . expresion
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    FIN             reduce using rule 64 (empty -> .)
    LLAVE_DER       reduce using rule 64 (empty -> .)
    FINPROC         reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    condicion2                     shift and go to state 13
    expresion                      shift and go to state 37
    condicion1                     shift and go to state 12
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 14

    (11) expresion -> repita . expresion
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    FIN             reduce using rule 64 (empty -> .)
    LLAVE_DER       reduce using rule 64 (empty -> .)
    FINPROC         reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    repita                         shift and go to state 14
    expresion                      shift and go to state 38
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 15

    (12) expresion -> hacer . expresion
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    FIN             reduce using rule 64 (empty -> .)
    LLAVE_DER       reduce using rule 64 (empty -> .)
    FINPROC         reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    hacer                          shift and go to state 15
    expresion                      shift and go to state 39
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 16

    (13) expresion -> funcion . expresion
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    FIN             reduce using rule 64 (empty -> .)
    LLAVE_DER       reduce using rule 64 (empty -> .)
    FINPROC         reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    funcion                        shift and go to state 16
    expresion                      shift and go to state 40
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 17

    (14) expresion -> llamarProc . expresion
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    FIN             reduce using rule 64 (empty -> .)
    LLAVE_DER       reduce using rule 64 (empty -> .)
    FINPROC         reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    llamarProc                     shift and go to state 17
    expresion                      shift and go to state 41
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 18

    (63) sinini -> DCL . ID
    (62) ini -> DCL . ID IGUAL NUMERO

    ID              shift and go to state 42


state 19

    (24) condicion1 -> ENCASO . cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> ENCASO . ID cond2Aux1 FINENCASO PUNTOCOMA
    (25) cond1Aux1 -> . cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
    (26) cond1Aux1 -> . empty empty empty empty empty
    (27) cond1Aux2 -> . CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (28) cond1Aux2 -> . empty empty empty empty empty empty empty empty empty
    (64) empty -> .

    ID              shift and go to state 44
    CUANDO          shift and go to state 47
    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    cond1Aux1                      shift and go to state 43
    cond1Aux2                      shift and go to state 45
    empty                          shift and go to state 46

state 20

    (18) repita -> REPITA . LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA

    LLAVE_IZQ       shift and go to state 48


state 21

    (29) hacer -> DESDE . ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    ID              shift and go to state 49


state 22

    (30) funcion -> Aleatorio .

    ENCASO          reduce using rule 30 (funcion -> Aleatorio .)
    REPITA          reduce using rule 30 (funcion -> Aleatorio .)
    DESDE           reduce using rule 30 (funcion -> Aleatorio .)
    LLAMAR          reduce using rule 30 (funcion -> Aleatorio .)
    ALEATORIO       reduce using rule 30 (funcion -> Aleatorio .)
    MOVER           reduce using rule 30 (funcion -> Aleatorio .)
    INC             reduce using rule 30 (funcion -> Aleatorio .)
    DEC             reduce using rule 30 (funcion -> Aleatorio .)
    INI             reduce using rule 30 (funcion -> Aleatorio .)
    FIN             reduce using rule 30 (funcion -> Aleatorio .)
    LLAVE_DER       reduce using rule 30 (funcion -> Aleatorio .)
    FINPROC         reduce using rule 30 (funcion -> Aleatorio .)


state 23

    (31) funcion -> Mover .

    ENCASO          reduce using rule 31 (funcion -> Mover .)
    REPITA          reduce using rule 31 (funcion -> Mover .)
    DESDE           reduce using rule 31 (funcion -> Mover .)
    LLAMAR          reduce using rule 31 (funcion -> Mover .)
    ALEATORIO       reduce using rule 31 (funcion -> Mover .)
    MOVER           reduce using rule 31 (funcion -> Mover .)
    INC             reduce using rule 31 (funcion -> Mover .)
    DEC             reduce using rule 31 (funcion -> Mover .)
    INI             reduce using rule 31 (funcion -> Mover .)
    FIN             reduce using rule 31 (funcion -> Mover .)
    LLAVE_DER       reduce using rule 31 (funcion -> Mover .)
    FINPROC         reduce using rule 31 (funcion -> Mover .)


state 24

    (32) funcion -> funcionAlge .

    ENCASO          reduce using rule 32 (funcion -> funcionAlge .)
    REPITA          reduce using rule 32 (funcion -> funcionAlge .)
    DESDE           reduce using rule 32 (funcion -> funcionAlge .)
    LLAMAR          reduce using rule 32 (funcion -> funcionAlge .)
    ALEATORIO       reduce using rule 32 (funcion -> funcionAlge .)
    MOVER           reduce using rule 32 (funcion -> funcionAlge .)
    INC             reduce using rule 32 (funcion -> funcionAlge .)
    DEC             reduce using rule 32 (funcion -> funcionAlge .)
    INI             reduce using rule 32 (funcion -> funcionAlge .)
    FIN             reduce using rule 32 (funcion -> funcionAlge .)
    LLAVE_DER       reduce using rule 32 (funcion -> funcionAlge .)
    FINPROC         reduce using rule 32 (funcion -> funcionAlge .)


state 25

    (33) llamarProc -> LLAMAR . ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 50


state 26

    (53) Aleatorio -> ALEATORIO . PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 51


state 27

    (40) Mover -> MOVER . PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 52


state 28

    (37) funcionAlge -> INC . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 53


state 29

    (38) funcionAlge -> DEC . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 54


state 30

    (39) funcionAlge -> INI . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 55


state 31

    (3) code -> INICIO DOSPUNTOS cuerpo FIN . PUNTOCOMA procedimiento

    PUNTOCOMA       shift and go to state 56


state 32

    (4) variable -> sinini PUNTOCOMA . cuerpo
    (7) cuerpo -> . variable
    (8) cuerpo -> . expresion
    (4) variable -> . sinini PUNTOCOMA cuerpo
    (5) variable -> . ini PUNTOCOMA cuerpo
    (6) variable -> . empty empty empty
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (63) sinini -> . DCL ID
    (62) ini -> . DCL ID IGUAL NUMERO
    (64) empty -> .
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DCL             shift and go to state 18
    FIN             reduce using rule 64 (empty -> .)
    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    sinini                         shift and go to state 9
    cuerpo                         shift and go to state 57
    variable                       shift and go to state 7
    expresion                      shift and go to state 8
    ini                            shift and go to state 10
    empty                          shift and go to state 11
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 33

    (5) variable -> ini PUNTOCOMA . cuerpo
    (7) cuerpo -> . variable
    (8) cuerpo -> . expresion
    (4) variable -> . sinini PUNTOCOMA cuerpo
    (5) variable -> . ini PUNTOCOMA cuerpo
    (6) variable -> . empty empty empty
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (63) sinini -> . DCL ID
    (62) ini -> . DCL ID IGUAL NUMERO
    (64) empty -> .
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DCL             shift and go to state 18
    FIN             reduce using rule 64 (empty -> .)
    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    ini                            shift and go to state 10
    cuerpo                         shift and go to state 58
    variable                       shift and go to state 7
    expresion                      shift and go to state 8
    sinini                         shift and go to state 9
    empty                          shift and go to state 11
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 34

    (6) variable -> empty empty . empty
    (15) expresion -> empty empty .
    (64) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 15 (expresion -> empty empty .)
    FIN             reduce using rule 15 (expresion -> empty empty .)

  ! FIN             [ reduce using rule 64 (empty -> .) ]

    empty                          shift and go to state 59

state 35

    (9) expresion -> condicion1 expresion .

    FIN             reduce using rule 9 (expresion -> condicion1 expresion .)
    LLAVE_DER       reduce using rule 9 (expresion -> condicion1 expresion .)
    FINPROC         reduce using rule 9 (expresion -> condicion1 expresion .)


state 36

    (15) expresion -> empty . empty
    (64) empty -> .

    FIN             reduce using rule 64 (empty -> .)
    LLAVE_DER       reduce using rule 64 (empty -> .)
    FINPROC         reduce using rule 64 (empty -> .)

    empty                          shift and go to state 60

state 37

    (10) expresion -> condicion2 expresion .

    FIN             reduce using rule 10 (expresion -> condicion2 expresion .)
    LLAVE_DER       reduce using rule 10 (expresion -> condicion2 expresion .)
    FINPROC         reduce using rule 10 (expresion -> condicion2 expresion .)


state 38

    (11) expresion -> repita expresion .

    FIN             reduce using rule 11 (expresion -> repita expresion .)
    LLAVE_DER       reduce using rule 11 (expresion -> repita expresion .)
    FINPROC         reduce using rule 11 (expresion -> repita expresion .)


state 39

    (12) expresion -> hacer expresion .

    FIN             reduce using rule 12 (expresion -> hacer expresion .)
    LLAVE_DER       reduce using rule 12 (expresion -> hacer expresion .)
    FINPROC         reduce using rule 12 (expresion -> hacer expresion .)


state 40

    (13) expresion -> funcion expresion .

    FIN             reduce using rule 13 (expresion -> funcion expresion .)
    LLAVE_DER       reduce using rule 13 (expresion -> funcion expresion .)
    FINPROC         reduce using rule 13 (expresion -> funcion expresion .)


state 41

    (14) expresion -> llamarProc expresion .

    FIN             reduce using rule 14 (expresion -> llamarProc expresion .)
    LLAVE_DER       reduce using rule 14 (expresion -> llamarProc expresion .)
    FINPROC         reduce using rule 14 (expresion -> llamarProc expresion .)


state 42

    (63) sinini -> DCL ID .
    (62) ini -> DCL ID . IGUAL NUMERO

    PUNTOCOMA       reduce using rule 63 (sinini -> DCL ID .)
    IGUAL           shift and go to state 61


state 43

    (24) condicion1 -> ENCASO cond1Aux1 . FINENCASO PUNTOCOMA

    FINENCASO       shift and go to state 62


state 44

    (19) condicion2 -> ENCASO ID . cond2Aux1 FINENCASO PUNTOCOMA
    (20) cond2Aux1 -> . cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
    (21) cond2Aux1 -> . empty empty empty empty empty
    (22) cond2Aux2 -> . CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (23) cond2Aux2 -> . empty empty empty empty empty empty empty empty
    (64) empty -> .

    CUANDO          shift and go to state 66
    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    cond2Aux1                      shift and go to state 63
    cond2Aux2                      shift and go to state 64
    empty                          shift and go to state 65

state 45

    (25) cond1Aux1 -> cond1Aux2 . SINO LLAVE_IZQ expresion LLAVE_DER

    SINO            shift and go to state 67


state 46

    (26) cond1Aux1 -> empty . empty empty empty empty
    (28) cond1Aux2 -> empty . empty empty empty empty empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 68

state 47

    (27) cond1Aux2 -> CUANDO . ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    ID              shift and go to state 69


state 48

    (18) repita -> REPITA LLAVE_IZQ . expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    LLAVE_DER       reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    expresion                      shift and go to state 70
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 49

    (29) hacer -> DESDE ID . IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    IGUAL           shift and go to state 71


state 50

    (33) llamarProc -> LLAMAR ID . PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 72


state 51

    (53) Aleatorio -> ALEATORIO PARENTESIS_IZQ . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 73


state 52

    (40) Mover -> MOVER PARENTESIS_IZQ . paramMover PARENTESIS_DER PUNTOCOMA
    (41) paramMover -> . AF
    (42) paramMover -> . F
    (43) paramMover -> . DFA
    (44) paramMover -> . IFA
    (45) paramMover -> . DFB
    (46) paramMover -> . IFB
    (47) paramMover -> . A
    (48) paramMover -> . DAA
    (49) paramMover -> . IAA
    (50) paramMover -> . DAB
    (51) paramMover -> . IAB
    (52) paramMover -> . AA

    AF              shift and go to state 75
    F               shift and go to state 76
    DFA             shift and go to state 77
    IFA             shift and go to state 78
    DFB             shift and go to state 79
    IFB             shift and go to state 80
    A               shift and go to state 81
    DAA             shift and go to state 82
    IAA             shift and go to state 83
    DAB             shift and go to state 84
    IAB             shift and go to state 85
    AA              shift and go to state 86

    paramMover                     shift and go to state 74

state 53

    (37) funcionAlge -> INC PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 87


state 54

    (38) funcionAlge -> DEC PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 88


state 55

    (39) funcionAlge -> INI PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 89


state 56

    (3) code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA . procedimiento
    (16) procedimiento -> . PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento
    (17) procedimiento -> . empty empty empty empty empty empty empty empty empty empty empty
    (64) empty -> .

    PROC            shift and go to state 91
    $end            reduce using rule 64 (empty -> .)

    procedimiento                  shift and go to state 90
    empty                          shift and go to state 92

state 57

    (4) variable -> sinini PUNTOCOMA cuerpo .

    FIN             reduce using rule 4 (variable -> sinini PUNTOCOMA cuerpo .)


state 58

    (5) variable -> ini PUNTOCOMA cuerpo .

    FIN             reduce using rule 5 (variable -> ini PUNTOCOMA cuerpo .)


state 59

    (6) variable -> empty empty empty .

    FIN             reduce using rule 6 (variable -> empty empty empty .)


state 60

    (15) expresion -> empty empty .

    FIN             reduce using rule 15 (expresion -> empty empty .)
    LLAVE_DER       reduce using rule 15 (expresion -> empty empty .)
    FINPROC         reduce using rule 15 (expresion -> empty empty .)


state 61

    (62) ini -> DCL ID IGUAL . NUMERO

    NUMERO          shift and go to state 93


state 62

    (24) condicion1 -> ENCASO cond1Aux1 FINENCASO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 94


state 63

    (19) condicion2 -> ENCASO ID cond2Aux1 . FINENCASO PUNTOCOMA

    FINENCASO       shift and go to state 95


state 64

    (20) cond2Aux1 -> cond2Aux2 . SINO LLAVE_IZQ expresion LLAVE_DER

    SINO            shift and go to state 96


state 65

    (21) cond2Aux1 -> empty . empty empty empty empty
    (23) cond2Aux2 -> empty . empty empty empty empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 97

state 66

    (22) cond2Aux2 -> CUANDO . condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (54) condicion -> . IGUAL
    (55) condicion -> . MAYOR
    (56) condicion -> . MENOR
    (57) condicion -> . DIFERENTE
    (58) condicion -> . MAYORIGUAL
    (59) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 99
    MAYOR           shift and go to state 100
    MENOR           shift and go to state 101
    DIFERENTE       shift and go to state 102
    MAYORIGUAL      shift and go to state 103
    MENORIGUAL      shift and go to state 104

    condicion                      shift and go to state 98

state 67

    (25) cond1Aux1 -> cond1Aux2 SINO . LLAVE_IZQ expresion LLAVE_DER

    LLAVE_IZQ       shift and go to state 105


state 68

    (26) cond1Aux1 -> empty empty . empty empty empty
    (28) cond1Aux2 -> empty empty . empty empty empty empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 106

state 69

    (27) cond1Aux2 -> CUANDO ID . condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (54) condicion -> . IGUAL
    (55) condicion -> . MAYOR
    (56) condicion -> . MENOR
    (57) condicion -> . DIFERENTE
    (58) condicion -> . MAYORIGUAL
    (59) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 99
    MAYOR           shift and go to state 100
    MENOR           shift and go to state 101
    DIFERENTE       shift and go to state 102
    MAYORIGUAL      shift and go to state 103
    MENORIGUAL      shift and go to state 104

    condicion                      shift and go to state 107

state 70

    (18) repita -> REPITA LLAVE_IZQ expresion . LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA

    LLAVE_DER       shift and go to state 108


state 71

    (29) hacer -> DESDE ID IGUAL . sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 110

state 72

    (33) llamarProc -> LLAMAR ID PARENTESIS_IZQ . parametro PARENTESIS_DER PUNTOCOMA
    (34) parametro -> . ID
    (35) parametro -> . NUMERO
    (36) parametro -> . empty
    (64) empty -> .

    ID              shift and go to state 112
    NUMERO          shift and go to state 114
    PARENTESIS_DER  reduce using rule 64 (empty -> .)

    parametro                      shift and go to state 113
    empty                          shift and go to state 115

state 73

    (53) Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 116


state 74

    (40) Mover -> MOVER PARENTESIS_IZQ paramMover . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 117


state 75

    (41) paramMover -> AF .

    PARENTESIS_DER  reduce using rule 41 (paramMover -> AF .)


state 76

    (42) paramMover -> F .

    PARENTESIS_DER  reduce using rule 42 (paramMover -> F .)


state 77

    (43) paramMover -> DFA .

    PARENTESIS_DER  reduce using rule 43 (paramMover -> DFA .)


state 78

    (44) paramMover -> IFA .

    PARENTESIS_DER  reduce using rule 44 (paramMover -> IFA .)


state 79

    (45) paramMover -> DFB .

    PARENTESIS_DER  reduce using rule 45 (paramMover -> DFB .)


state 80

    (46) paramMover -> IFB .

    PARENTESIS_DER  reduce using rule 46 (paramMover -> IFB .)


state 81

    (47) paramMover -> A .

    PARENTESIS_DER  reduce using rule 47 (paramMover -> A .)


state 82

    (48) paramMover -> DAA .

    PARENTESIS_DER  reduce using rule 48 (paramMover -> DAA .)


state 83

    (49) paramMover -> IAA .

    PARENTESIS_DER  reduce using rule 49 (paramMover -> IAA .)


state 84

    (50) paramMover -> DAB .

    PARENTESIS_DER  reduce using rule 50 (paramMover -> DAB .)


state 85

    (51) paramMover -> IAB .

    PARENTESIS_DER  reduce using rule 51 (paramMover -> IAB .)


state 86

    (52) paramMover -> AA .

    PARENTESIS_DER  reduce using rule 52 (paramMover -> AA .)


state 87

    (37) funcionAlge -> INC PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 118


state 88

    (38) funcionAlge -> DEC PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 119


state 89

    (39) funcionAlge -> INI PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 120


state 90

    (3) code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento .

    $end            reduce using rule 3 (code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento .)


state 91

    (16) procedimiento -> PROC . ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    ID              shift and go to state 121


state 92

    (17) procedimiento -> empty . empty empty empty empty empty empty empty empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 122

state 93

    (62) ini -> DCL ID IGUAL NUMERO .

    PUNTOCOMA       reduce using rule 62 (ini -> DCL ID IGUAL NUMERO .)


state 94

    (24) condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .

    ENCASO          reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    REPITA          reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    DESDE           reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    LLAMAR          reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    ALEATORIO       reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    MOVER           reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    INC             reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    DEC             reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    INI             reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    FIN             reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    LLAVE_DER       reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    FINPROC         reduce using rule 24 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)


state 95

    (19) condicion2 -> ENCASO ID cond2Aux1 FINENCASO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 123


state 96

    (20) cond2Aux1 -> cond2Aux2 SINO . LLAVE_IZQ expresion LLAVE_DER

    LLAVE_IZQ       shift and go to state 124


state 97

    (21) cond2Aux1 -> empty empty . empty empty empty
    (23) cond2Aux2 -> empty empty . empty empty empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 125

state 98

    (22) cond2Aux2 -> CUANDO condicion . sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 126

state 99

    (54) condicion -> IGUAL .

    ID              reduce using rule 54 (condicion -> IGUAL .)
    NUMERO          reduce using rule 54 (condicion -> IGUAL .)


state 100

    (55) condicion -> MAYOR .

    ID              reduce using rule 55 (condicion -> MAYOR .)
    NUMERO          reduce using rule 55 (condicion -> MAYOR .)


state 101

    (56) condicion -> MENOR .

    ID              reduce using rule 56 (condicion -> MENOR .)
    NUMERO          reduce using rule 56 (condicion -> MENOR .)


state 102

    (57) condicion -> DIFERENTE .

    ID              reduce using rule 57 (condicion -> DIFERENTE .)
    NUMERO          reduce using rule 57 (condicion -> DIFERENTE .)


state 103

    (58) condicion -> MAYORIGUAL .

    ID              reduce using rule 58 (condicion -> MAYORIGUAL .)
    NUMERO          reduce using rule 58 (condicion -> MAYORIGUAL .)


state 104

    (59) condicion -> MENORIGUAL .

    ID              reduce using rule 59 (condicion -> MENORIGUAL .)
    NUMERO          reduce using rule 59 (condicion -> MENORIGUAL .)


state 105

    (25) cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ . expresion LLAVE_DER
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    LLAVE_DER       reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    expresion                      shift and go to state 127
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 106

    (26) cond1Aux1 -> empty empty empty . empty empty
    (28) cond1Aux2 -> empty empty empty . empty empty empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 128

state 107

    (27) cond1Aux2 -> CUANDO ID condicion . sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 129

state 108

    (18) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER . HASTAENCONTRAR ID condicion sentencia PUNTOCOMA

    HASTAENCONTRAR  shift and go to state 130


state 109

    (60) sentencia -> ID .

    HASTA           reduce using rule 60 (sentencia -> ID .)
    ENTONS          reduce using rule 60 (sentencia -> ID .)
    PARENTESIS_DER  reduce using rule 60 (sentencia -> ID .)
    HAGA            reduce using rule 60 (sentencia -> ID .)
    PUNTOCOMA       reduce using rule 60 (sentencia -> ID .)


state 110

    (29) hacer -> DESDE ID IGUAL sentencia . HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    HASTA           shift and go to state 131


state 111

    (61) sentencia -> NUMERO .

    HASTA           reduce using rule 61 (sentencia -> NUMERO .)
    ENTONS          reduce using rule 61 (sentencia -> NUMERO .)
    PARENTESIS_DER  reduce using rule 61 (sentencia -> NUMERO .)
    HAGA            reduce using rule 61 (sentencia -> NUMERO .)
    PUNTOCOMA       reduce using rule 61 (sentencia -> NUMERO .)


state 112

    (34) parametro -> ID .

    PARENTESIS_DER  reduce using rule 34 (parametro -> ID .)


state 113

    (33) llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 132


state 114

    (35) parametro -> NUMERO .

    PARENTESIS_DER  reduce using rule 35 (parametro -> NUMERO .)


state 115

    (36) parametro -> empty .

    PARENTESIS_DER  reduce using rule 36 (parametro -> empty .)


state 116

    (53) Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 53 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)


state 117

    (40) Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 133


state 118

    (37) funcionAlge -> INC PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 134

state 119

    (38) funcionAlge -> DEC PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 135

state 120

    (39) funcionAlge -> INI PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 136

state 121

    (16) procedimiento -> PROC ID . PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    PARENTESIS_IZQ  shift and go to state 137


state 122

    (17) procedimiento -> empty empty . empty empty empty empty empty empty empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 138

state 123

    (19) condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .

    ENCASO          reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    REPITA          reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    DESDE           reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    LLAMAR          reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    ALEATORIO       reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    MOVER           reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    INC             reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    DEC             reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    INI             reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    FIN             reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    LLAVE_DER       reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    FINPROC         reduce using rule 19 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)


state 124

    (20) cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ . expresion LLAVE_DER
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    LLAVE_DER       reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    expresion                      shift and go to state 139
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 125

    (21) cond2Aux1 -> empty empty empty . empty empty
    (23) cond2Aux2 -> empty empty empty . empty empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 140

state 126

    (22) cond2Aux2 -> CUANDO condicion sentencia . ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2

    ENTONS          shift and go to state 141


state 127

    (25) cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion . LLAVE_DER

    LLAVE_DER       shift and go to state 142


state 128

    (26) cond1Aux1 -> empty empty empty empty . empty
    (28) cond1Aux2 -> empty empty empty empty . empty empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 143

state 129

    (27) cond1Aux2 -> CUANDO ID condicion sentencia . ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    ENTONS          shift and go to state 144


state 130

    (18) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR . ID condicion sentencia PUNTOCOMA

    ID              shift and go to state 145


state 131

    (29) hacer -> DESDE ID IGUAL sentencia HASTA . sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 146

state 132

    (33) llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 147


state 133

    (40) Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)


state 134

    (37) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 148


state 135

    (38) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 149


state 136

    (39) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 150


state 137

    (16) procedimiento -> PROC ID PARENTESIS_IZQ . ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    ID              shift and go to state 151


state 138

    (17) procedimiento -> empty empty empty . empty empty empty empty empty empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 152

state 139

    (20) cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion . LLAVE_DER

    LLAVE_DER       shift and go to state 153


state 140

    (21) cond2Aux1 -> empty empty empty empty . empty
    (23) cond2Aux2 -> empty empty empty empty . empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 64 (empty -> .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 154

state 141

    (22) cond2Aux2 -> CUANDO condicion sentencia ENTONS . LLAVE_IZQ expresion LLAVE_DER cond2Aux2

    LLAVE_IZQ       shift and go to state 155


state 142

    (25) cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .

    FINENCASO       reduce using rule 25 (cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .)


state 143

    (26) cond1Aux1 -> empty empty empty empty empty .
    (28) cond1Aux2 -> empty empty empty empty empty . empty empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 26 (cond1Aux1 -> empty empty empty empty empty .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 156

state 144

    (27) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS . LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    LLAVE_IZQ       shift and go to state 157


state 145

    (18) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID . condicion sentencia PUNTOCOMA
    (54) condicion -> . IGUAL
    (55) condicion -> . MAYOR
    (56) condicion -> . MENOR
    (57) condicion -> . DIFERENTE
    (58) condicion -> . MAYORIGUAL
    (59) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 99
    MAYOR           shift and go to state 100
    MENOR           shift and go to state 101
    DIFERENTE       shift and go to state 102
    MAYORIGUAL      shift and go to state 103
    MENORIGUAL      shift and go to state 104

    condicion                      shift and go to state 158

state 146

    (29) hacer -> DESDE ID IGUAL sentencia HASTA sentencia . HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    HAGA            shift and go to state 159


state 147

    (33) llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 33 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)


state 148

    (37) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 160


state 149

    (38) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 161


state 150

    (39) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 162


state 151

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID . PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    PARENTESIS_DER  shift and go to state 163


state 152

    (17) procedimiento -> empty empty empty empty . empty empty empty empty empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 164

state 153

    (20) cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .

    FINENCASO       reduce using rule 20 (cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .)


state 154

    (21) cond2Aux1 -> empty empty empty empty empty .
    (23) cond2Aux2 -> empty empty empty empty empty . empty empty empty
    (64) empty -> .

    FINENCASO       reduce using rule 21 (cond2Aux1 -> empty empty empty empty empty .)
    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 165

state 155

    (22) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ . expresion LLAVE_DER cond2Aux2
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    LLAVE_DER       reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    expresion                      shift and go to state 166
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 156

    (28) cond1Aux2 -> empty empty empty empty empty empty . empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 167

state 157

    (27) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ . expresion LLAVE_DER cond1Aux2
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    LLAVE_DER       reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    expresion                      shift and go to state 168
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 158

    (18) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion . sentencia PUNTOCOMA
    (60) sentencia -> . ID
    (61) sentencia -> . NUMERO

    ID              shift and go to state 109
    NUMERO          shift and go to state 111

    sentencia                      shift and go to state 169

state 159

    (29) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA . LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    LLAVE_IZQ       shift and go to state 170


state 160

    (37) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 37 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 161

    (38) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 38 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 162

    (39) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 39 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 163

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER . INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    INICIOPROC      shift and go to state 171


state 164

    (17) procedimiento -> empty empty empty empty empty . empty empty empty empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 172

state 165

    (23) cond2Aux2 -> empty empty empty empty empty empty . empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 173

state 166

    (22) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion . LLAVE_DER cond2Aux2

    LLAVE_DER       shift and go to state 174


state 167

    (28) cond1Aux2 -> empty empty empty empty empty empty empty . empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 175

state 168

    (27) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion . LLAVE_DER cond1Aux2

    LLAVE_DER       shift and go to state 176


state 169

    (18) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia . PUNTOCOMA

    PUNTOCOMA       shift and go to state 177


state 170

    (29) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ . expresion LLAVE_DER FINDESDE PUNTOCOMA
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    LLAVE_DER       reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    expresion                      shift and go to state 178
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 171

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC . DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    DOSPUNTOS       shift and go to state 179


state 172

    (17) procedimiento -> empty empty empty empty empty empty . empty empty empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 180

state 173

    (23) cond2Aux2 -> empty empty empty empty empty empty empty . empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 181

state 174

    (22) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER . cond2Aux2
    (22) cond2Aux2 -> . CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (23) cond2Aux2 -> . empty empty empty empty empty empty empty empty
    (64) empty -> .

    CUANDO          shift and go to state 66
    SINO            reduce using rule 64 (empty -> .)

    cond2Aux2                      shift and go to state 182
    empty                          shift and go to state 183

state 175

    (28) cond1Aux2 -> empty empty empty empty empty empty empty empty . empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 184

state 176

    (27) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER . cond1Aux2
    (27) cond1Aux2 -> . CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (28) cond1Aux2 -> . empty empty empty empty empty empty empty empty empty
    (64) empty -> .

    CUANDO          shift and go to state 47
    SINO            reduce using rule 64 (empty -> .)

    cond1Aux2                      shift and go to state 185
    empty                          shift and go to state 186

state 177

    (18) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .

    ENCASO          reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    REPITA          reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    DESDE           reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    LLAMAR          reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    ALEATORIO       reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    MOVER           reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    INC             reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    DEC             reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    INI             reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    FIN             reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    LLAVE_DER       reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    FINPROC         reduce using rule 18 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)


state 178

    (29) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion . LLAVE_DER FINDESDE PUNTOCOMA

    LLAVE_DER       shift and go to state 187


state 179

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS . expresion FINPROC PUNTOCOMA procedimiento
    (9) expresion -> . condicion1 expresion
    (10) expresion -> . condicion2 expresion
    (11) expresion -> . repita expresion
    (12) expresion -> . hacer expresion
    (13) expresion -> . funcion expresion
    (14) expresion -> . llamarProc expresion
    (15) expresion -> . empty empty
    (24) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (19) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (29) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (30) funcion -> . Aleatorio
    (31) funcion -> . Mover
    (32) funcion -> . funcionAlge
    (33) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (64) empty -> .
    (53) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (37) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (38) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (39) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 19
    REPITA          shift and go to state 20
    DESDE           shift and go to state 21
    LLAMAR          shift and go to state 25
    FINPROC         reduce using rule 64 (empty -> .)
    ALEATORIO       shift and go to state 26
    MOVER           shift and go to state 27
    INC             shift and go to state 28
    DEC             shift and go to state 29
    INI             shift and go to state 30

    expresion                      shift and go to state 188
    condicion1                     shift and go to state 12
    condicion2                     shift and go to state 13
    repita                         shift and go to state 14
    hacer                          shift and go to state 15
    funcion                        shift and go to state 16
    llamarProc                     shift and go to state 17
    empty                          shift and go to state 36
    Aleatorio                      shift and go to state 22
    Mover                          shift and go to state 23
    funcionAlge                    shift and go to state 24

state 180

    (17) procedimiento -> empty empty empty empty empty empty empty . empty empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 189

state 181

    (23) cond2Aux2 -> empty empty empty empty empty empty empty empty .

    SINO            reduce using rule 23 (cond2Aux2 -> empty empty empty empty empty empty empty empty .)


state 182

    (22) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2 .

    SINO            reduce using rule 22 (cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2 .)


state 183

    (23) cond2Aux2 -> empty . empty empty empty empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 190

state 184

    (28) cond1Aux2 -> empty empty empty empty empty empty empty empty empty .

    SINO            reduce using rule 28 (cond1Aux2 -> empty empty empty empty empty empty empty empty empty .)


state 185

    (27) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2 .

    SINO            reduce using rule 27 (cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2 .)


state 186

    (28) cond1Aux2 -> empty . empty empty empty empty empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 191

state 187

    (29) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER . FINDESDE PUNTOCOMA

    FINDESDE        shift and go to state 192


state 188

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion . FINPROC PUNTOCOMA procedimiento

    FINPROC         shift and go to state 193


state 189

    (17) procedimiento -> empty empty empty empty empty empty empty empty . empty empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 194

state 190

    (23) cond2Aux2 -> empty empty . empty empty empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 195

state 191

    (28) cond1Aux2 -> empty empty . empty empty empty empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 196

state 192

    (29) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 197


state 193

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC . PUNTOCOMA procedimiento

    PUNTOCOMA       shift and go to state 198


state 194

    (17) procedimiento -> empty empty empty empty empty empty empty empty empty . empty empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 199

state 195

    (23) cond2Aux2 -> empty empty empty . empty empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 200

state 196

    (28) cond1Aux2 -> empty empty empty . empty empty empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 201

state 197

    (29) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .

    ENCASO          reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    REPITA          reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    DESDE           reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    LLAMAR          reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    ALEATORIO       reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    MOVER           reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    INC             reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    DEC             reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    INI             reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    FIN             reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    LLAVE_DER       reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    FINPROC         reduce using rule 29 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)


state 198

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA . procedimiento
    (16) procedimiento -> . PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento
    (17) procedimiento -> . empty empty empty empty empty empty empty empty empty empty empty
    (64) empty -> .

    PROC            shift and go to state 91
    $end            reduce using rule 64 (empty -> .)

    procedimiento                  shift and go to state 202
    empty                          shift and go to state 92

state 199

    (17) procedimiento -> empty empty empty empty empty empty empty empty empty empty . empty
    (64) empty -> .

    $end            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 203

state 200

    (23) cond2Aux2 -> empty empty empty empty . empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 204

state 201

    (28) cond1Aux2 -> empty empty empty empty . empty empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 205

state 202

    (16) procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento .

    $end            reduce using rule 16 (procedimiento -> PROC ID PARENTESIS_IZQ ID PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento .)


state 203

    (17) procedimiento -> empty empty empty empty empty empty empty empty empty empty empty .

    $end            reduce using rule 17 (procedimiento -> empty empty empty empty empty empty empty empty empty empty empty .)


state 204

    (23) cond2Aux2 -> empty empty empty empty empty . empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 165

state 205

    (28) cond1Aux2 -> empty empty empty empty empty . empty empty empty empty
    (64) empty -> .

    SINO            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 156
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 34 resolved using rule (expresion -> empty empty)
WARNING: rejected rule (empty -> <empty>) in state 34
